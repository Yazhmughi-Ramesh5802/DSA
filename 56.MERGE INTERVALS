// SORT THE NESTED ARRAY
// START = ARR[0][0] END = ARR[0][1]
// [A,B] [C,D] 
// MERGE THE ARRAYS IF 
// CHECK IF C<=B AND DO END = MAX(END,D)


class Solution {
    public int[][] merge(int[][] intervals) {
        List <int[]> ans = new ArrayList <int[]> ();
        if(intervals.length==0 || intervals==null){
            return ans.toArray(new int[0][]);
        }
        int[] num = new int[2];
        //Arrays.sort(intervals,(a,b)->a[0]-b[0]);
        for(int i=0;i<intervals.length-1;i++){
            for(int j=i+1;j<intervals.length;j++){
                if(intervals[i][0]>intervals[j][0]){
                    num=intervals[i];
                    intervals[i]=intervals[j];
                    intervals[j]=num;
                }
            }
        }
        int start=intervals[0][0];
        int end=intervals[0][1];

        for(int i=1;i<intervals.length;i++){
            if(intervals[i][0]<=end){
                end=Math.max(end,intervals[i][1]);
            }
            else{
                int[] temp = new int[2];
                temp[0]=start;
                temp[1]=end;
                ans.add(temp);
                start=intervals[i][0];
                end=intervals[i][1];

            }
        }
        int[] temp = new int[2];
        temp[0]=start;
        temp[1]=end;
        ans.add(temp);
        return ans.toArray(new int[0][]);
        
    }
}
