
import java.util.*;
public class Solution {
	public static boolean checkStars(String p,int i){
		for(int k=1;k<=i;k++){
			if(p.charAt(k-1)!='*') return false;
		}
		return true;
		
	}
	public static boolean func(int i,int j, String p, String t,int[][] dp){
		if(i<0 && j<0) return true;
		if(i<0 && j>=0) return false;
		if(i>=0 && j<0) {
			for(int k=0;k<=i;k++){
				if(p.charAt(k)!='*') return false;
			}
			return true;
		}
		if(dp[i][j] != -1) return(dp[i][j]==1 ? true : false); 
		

		if(p.charAt(i) == t.charAt(j) || p.charAt(i)=='?'){
			boolean ans =  func(i-1,j-1,p,t,dp);
			if(ans) dp[i][j] = 1;
			else dp[i][j] = 0;
			return ans;
		
		} 
		else if(p.charAt(i) == '*'){
			boolean ans = func(i-1,j,p,t,dp) || func(i,j-1,p,t,dp);
			if(ans) dp[i][j] = 1;
			else dp[i][j] = 0;
			return ans;

		}
		else {
			dp[i][j] = 0;
			return false;
		}
	}
	public static boolean wildcardMatching(String pattern, String text) {
		int m =  pattern.length();
		int n = text.length();
		// int[][] dp = new int[m][n];
		// for(int[] row : dp) Arrays.fill(row,-1);
		// return func(m-1,n-1,pattern,text,dp);

		boolean[][] dp = new boolean[m+1][n+1];
		dp[0][0] = true;
		for(int j=1;j<=n;j++) dp[0][j] = false;
		for(int i=1;i<=m;i++){
			dp[i][0] = checkStars(pattern, i);
		}

		for(int i=1;i<=m;i++){
			for(int j=1;j<=n;j++){
				if(pattern.charAt(i-1) == text.charAt(j-1) || pattern.charAt(i-1) == '?') dp[i][j] = dp[i-1][j-1];
				else if(pattern.charAt(i-1) == '*') dp[i][j] = dp[i-1][j] || dp[i][j-1];
				else{
					dp[i][j] = false;
				}			
			}
		}
		return dp[m][n];





	}
}
