public class Solution {
    public static int minSubsetSumDifference(int []arr, int n) {
        
        int totalSum = 0;
        for(int i=0;i<arr.length;i++) totalSum+=arr[i];
        
        boolean[][] dp = new boolean[arr.length][totalSum+1];

        for(int i=0;i<arr.length;i++){
            dp[i][0] = true;
        }
        if(arr[0]<=totalSum) dp[0][arr[0]] = true;


        for(int i=1;i<arr.length;i++){
            for(int target=1;target<=totalSum;target++){
                boolean dontTake = dp[i-1][target];
                boolean take = false;
                if(arr[i]<=target) take = dp[i-1][target-arr[i]];

                dp[i][target] = dontTake || take;
            }
        }

        int mini = Integer.MAX_VALUE;
        for(int i=0;i<=totalSum/2;i++){
            if(dp[arr.length-1][i] == true){
            int s1 = i;
            int s2 = totalSum-s1;
            mini = Math.min(mini,Math.abs(s1-s2));
            }
        }

        return mini;

    }
}
