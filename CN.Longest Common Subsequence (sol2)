import java.util.*;
public class Solution {

	public static int func(int ind1,int ind2,String s,String t,int[][] dp){
		if(ind1<0 || ind2<0) return 0; // base condition

		if(dp[ind1][ind2] != -1) return dp[ind1][ind2];
        // if characters are equal 
		if(s.charAt(ind1) == t.charAt(ind2)) return 1 + func(ind1-1,ind2-1,s,t,dp); 
		
		// else if characters are not equal
		return dp[ind1][ind2] = Math.max(func(ind1-1,ind2,s,t,dp),func(ind1,ind2-1,s,t,dp));
	}

	public static int lcs(String s, String t) {
		//int[][] dp = new int[s.length()][t.length()];
		//for(int[] row : dp) Arrays.fill(row,-1);

		int[][] dp = new int[s.length()+1][t.length()+1];
		for(int i=0;i<=s.length();i++) dp[i][0] = 0;
		for(int j=0;j<=t.length();j++) dp[0][j] = 0;

		for(int i=1;i<=s.length();i++){
			for(int j=1;j<=t.length();j++){
				if(s.charAt(i-1) == t.charAt(j-1)) dp[i][j] = 1 + dp[i-1][j-1]; 
				else dp[i][j] = Math.max(dp[i-1][j],dp[i][j-1]);
	
			}
		}
		return dp[s.length()][t.length()];
		//return func(s.length()-1,t.length()-1,s,t,dp);
    }

}
