
import java.util.*;
public class Solution {
	public static int func(int ind,int price[],int w,int[][] dp){
		if(ind==0){
			return (w * price[0]);
		}
		if(dp[ind][w] != -1) return dp[ind][w];
		int dontTake = 0 + func(ind-1,price,w,dp);
		int take = 0;
		if((ind+1)<=w) take = price[ind] + func(ind,price,w-(ind+1),dp);
		return dp[ind][w] = Math.max(take,dontTake);
	}
	public static int cutRod(int price[], int n) {
		int[][] dp = new int[n][n+1];
		for(int[] row : dp) Arrays.fill(row,-1);
		return func(n-1,price,n,dp);
	}
}
