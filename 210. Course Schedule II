class Solution {
    public int[] findOrder(int numCourses, int[][] prerequisites) {
        ArrayList<ArrayList<Integer>> adj = new ArrayList<>();
        for(int i=0;i<numCourses;i++) adj.add(new ArrayList<>());
        int[] inDeg = new int[numCourses];
        for(int i=0;i<prerequisites.length;i++){
            int a = prerequisites[i][0];
            int b = prerequisites[i][1];
            adj.get(b).add(a);
            inDeg[a]++;
        }
        Queue<Integer> q = new LinkedList<>();
        int[] ans = new int[numCourses];
        int j=0;
        for(int i=0;i<numCourses;i++){
            if(inDeg[i]==0) q.add(i);
        }

        while(!q.isEmpty()){
            int node = q.peek();
            q.remove();
            ans[j++]=node;

            for(int i=0;i<adj.get(node).size();i++){
                int temp = adj.get(node).get(i);
                inDeg[temp]--;
                if(inDeg[temp]==0) q.add(temp);
            }
        }
        int[] arr = new int[0]; 
        if(j==numCourses) return ans;
        else return arr;
    }
}
