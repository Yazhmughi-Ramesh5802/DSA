import java.util.*;
public class Solution {
    public static boolean compare(String s1,String s2){
        if(Math.abs(s1.length()-s2.length())!=1) return false;
        int first=0;
        int second = 0;
        while(first<s1.length()){
            if(second<s2.length() && s1.charAt(first)==s2.charAt(second)){
                first++;
                second++;
            }
            else{
                first++;
            }
        }
        if(first == s1.length() && second == s2.length()) return true;
        else return false;
    }
    public static int longestStrChain(String[] arr) {
        for(int i=0;i<arr.length-1;i++){
            for(int j=i+1;j<arr.length;j++){
                if(arr[i].length()>arr[j].length()){
                    String temp = arr[i];
                    arr[i] = arr[j];
                    arr[j] = temp;
                }
            }
        }
        int n = arr.length;
        int[] dp = new int[n];
        Arrays.fill(dp,1);
        int maxi = 0;
        for(int i=0;i<n;i++){
            for(int prev=0;prev<i;prev++){
                if(compare(arr[i],arr[prev])){
                    dp[i] = Math.max(dp[i],dp[prev]+1);
                }
            }
            maxi = Math.max(maxi,dp[i]);
        }
        
        return maxi;
    }
}
