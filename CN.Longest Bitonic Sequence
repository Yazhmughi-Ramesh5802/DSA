import java.util.*;
public class Solution {
    public static int longestBitonicSequence(int[] arr, int n) {
        int[] dp1 = new int[n];
        int[] dp2 = new int[n];

        Arrays.fill(dp1,1);
        Arrays.fill(dp2,1);

        for(int i=0;i<n;i++){
            for(int prev=0;prev<i;prev++){
                if(arr[i]>arr[prev]) dp1[i] = Math.max(dp1[i],dp1[prev]+1); 
            }
        }

        for(int i=n-1;i>=0;i--){
            for(int prev=n-1;prev>i;prev--){
                if(arr[i]>arr[prev]) dp2[i] = Math.max(dp2[i],dp2[prev]+1);
            }
        }

        int maxi = 0;
        for(int i=0;i<n;i++) maxi = Math.max(maxi,dp1[i]+dp2[i]);
        //subtracting 1 for the common element
        return maxi-1;
    }
}
