class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> ans = new ArrayList<>();
        List<String> temp = new ArrayList<>();
        permu(s,0,temp,ans);
        return ans;
        
    }
    public void permu(String s,int i,List<String> temp,List<List<String>> ans){
        if(i==s.length()){
            ans.add(new ArrayList<>(temp));
            return;
        }
        for(int j=i;j<s.length();j++){
            if(palin(s,i,j)){
                temp.add(s.substring(i,j+1));
                permu(s,j+1,temp,ans);
                temp.remove(temp.size()-1);
            }
        }
        
    }
    public boolean palin(String s,int start,int end){
        while(start<=end){
            if(s.charAt(start++)!=s.charAt(end--)) return false;
            
        }
        return true;
    }
}
