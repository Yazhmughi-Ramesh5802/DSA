// SOLUTION ACCEPTED BUT I PREFER I NEED TO LEARN MORE AND OPTIMIZE IT



/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode middleNode(ListNode head) {
        ArrayList <Integer> arr = new ArrayList<Integer>();
        ListNode temp = head;
        while(head.next!=null){
            arr.add(head.val);
            System.out.println(head.val);
            head= head.next;
        }
        arr.add(head.val);
        int l = arr.size();
        if(l%2==1) l=(l/2)+1;
        else l=(l/2)+1;
        int k=0;
        while(temp.next!=null){
            if(k==(l-1)) return temp;
            temp=temp.next;
            k++;
        }
        return temp;

    }
}
