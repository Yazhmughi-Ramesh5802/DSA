class Solution {
    public int func(String s1,String s2){
        int n = s1.length();
        int m = s2.length();
        int[][] dp = new int[n+1][m+1];
        for(int i=0;i<=n;i++) dp[i][0] = 0;
        for(int i=0;i<=m;i++) dp[0][i] = 0;

        for(int i1 = 1;i1<=n;i1++){
            for(int i2 = 1;i2<=m;i2++){
                if(s1.charAt(i1-1) == s2.charAt(i2-1)) dp[i1][i2] = 1 + dp[i1-1][i2-1];
                else dp[i1][i2] = Math.max(dp[i1-1][i2],dp[i1][i2-1]);

            }
        }
        return dp[n][m];
    }
    public int minDistance(String word1, String word2) {
        // int del = word1.length() - func(word1,word2);
        // int add = word2.length() - func(word1,word2);
        // int total = del + add;
        
        int tot = word1.length() + word2.length() - 2*func(word1,word2);
        return tot;
    }
}
