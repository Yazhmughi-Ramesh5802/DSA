import java.util.* ;
import java.io.*; 
public class Solution {
    public static int func(int ind,int tar,int[] arr,int[][] dp){
        if(ind==0){
            if(arr[0]==0 && tar==0) return 2;
            else if(arr[0]==tar || tar==0) return 1;
            else return 0;
        }
        if(dp[ind][tar] != -1) return dp[ind][tar];
        int dontTake = func(ind-1,tar,arr,dp);
        int take = 0;
        if(arr[ind]<=tar) take = func(ind-1,tar-arr[ind],arr,dp);
        return dp[ind][tar] = dontTake + take;
    }
    public static int targetSum(int n, int target, int[] arr) {
    	int totSum = 0;
    
        for(int i=0;i<arr.length;i++) totSum+=arr[i];
        
        if(totSum<target) return 0;
        if((target + totSum)%2==1) return 0;
        
        int value = (totSum + target)/2;
        int[][] dp = new int[n][totSum+1];

        for(int[] row : dp) Arrays.fill(row,-1);
        return func(arr.length-1,value,arr,dp);
    }
}

// a - b = target
// a - (totsum-a) =  target
// a - totsum + a = target
// 2a - totsum = target
// a = (target + totsum)/2; 
