class Solution {
    public int func(int i,int j,List<List<Integer>> triangle,int m,List<List<Integer>> dp){
        if(i==m-1){
            
            return triangle.get(i).get(j);
        }

        if(dp.get(i).get(j)!=-1) return dp.get(i).get(j);
        int down = triangle.get(i).get(j) + func(i+1,j,triangle,m,dp);
        int diag = triangle.get(i).get(j) + func(i+1,j+1,triangle,m,dp);

        dp.get(i).set(j,Math.min(down,diag));
        return Math.min(down,diag);
    }
    public int minimumTotal(List<List<Integer>> triangle) {
        int m = triangle.size();
        List<List<Integer>> dp = new ArrayList<>();
        List<Integer> temp = new ArrayList<>();
        for(int i=0;i<m;i++){
            temp = new ArrayList<>();
            for(int j=0;j<i+1;j++){
                temp.add(-1);
            }
            dp.add(temp);
        }
        // return func(0,0,triangle,m,dp);
        for(int i=0;i<m;i++){
            dp.get(m-1).set(i,triangle.get(m-1).get(i));
        }
        for(int i=m-2;i>=0;i--){
            for(int j=i;j>=0;j--){
                int down = triangle.get(i).get(j) + dp.get(i+1).get(j);
                int diag = triangle.get(i).get(j) + dp.get(i+1).get(j+1);
                dp.get(i).set(j,Math.min(down,diag));
            }
        }
        return dp.get(0).get(0);
        
    }
}
